# Generated by Django 5.1.6 on 2025-04-24 21:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('major_name', models.CharField(max_length=100)),
                ('dept_head', models.CharField(max_length=100)),
                ('dept_contact', models.CharField(max_length=20)),
                ('dept_location', models.CharField(max_length=100)),
                ('dept_identifier', models.CharField(max_length=20, unique=True)),
                ('course_id', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='UniversityData',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('mtsu_email', models.EmailField(max_length=100, unique=True)),
                ('major', models.CharField(max_length=100)),
                ('grad_year', models.IntegerField()),
                ('enroll_status', models.CharField(choices=[('On Campus', 'On Campus'), ('Off Campus', 'Off Campus')], max_length=20)),
            ],
            options={
                'db_table': 'university_data',
            },
        ),
        migrations.CreateModel(
            name='UniUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='MTSU Number')),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, default='', max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, default='', max_length=50, verbose_name='Last name')),
                ('personal_email', models.EmailField(blank=True, default='', max_length=100, unique=True, verbose_name='Personal Email')),
                ('mtsu_email', models.EmailField(blank=True, default='', max_length=100, unique=True, verbose_name='MTSU Email')),
                ('phone_number', models.CharField(blank=True, default='', max_length=20, verbose_name='Phone Number')),
                ('graduation_year', models.IntegerField(default=0, verbose_name='Graduation Year')),
                ('major', models.CharField(blank=True, default='', max_length=100, verbose_name='Major')),
                ('password', models.CharField(blank=True, default='', max_length=128, verbose_name='Password')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'uni_users',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('privacy', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], max_length=7)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts',
            },
        ),
    ]
